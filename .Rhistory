dat["Ozone"]
dat["Ozone"]["47"]
dat[47]
dat["47"]
dat[c("Ozone")]
dat[c("Ozone", 47)]
d <- dat["Ozone"]
d
d["47"]
d[47]
is.na(d)
x <- is.na(d)
x
d[is.na[d]]
d[x]
x
d
x
d
complete.cases(d)
x <- complete.cases(d)
x
d[x]
dat
d
x <- is.na(d)
x
dat[complete.cases[dat]]
dat[complete.cases(dat)]
dat[complete.cases(dat),]
d[complete.cases(d),]
d
d[complete.cases(d)]
d[complete.cases(d), 1]
d[complete.cases(d), ]
d[!complete.cases(d), ]
length(d[!complete.cases(d), ])
nd <- d[complete.cases(d),]
nd
mean(d)
mean(nd)
dat
dat[ozone > 1]
names(dat)
subset(dat, Ozone > 31 & Temp > 90)
subset(dat, Ozone > 31 & Temp > 90)$Sol
mean(subset(dat, Ozone > 31 & Temp > 90)$Sol)
mean(subset(dat, Month = 8))
mean(subset(dat, Month == 8))
subset(dat, Month = 8)
subset(dat, Month == 8)
mean(subset(dat, Month == 8)$Temp)
mean(subset(dat, Month == 6)$Temp)
max(subset(dat, Month == 5)$Ozone)
mean(subset(dat, Month == 5)$Ozone)
subset(dat, Month == 5)$Ozone
mean(subset(dat, Month == 5)$Ozone)
mean(complete.cases(subset(dat, Month == 5)$Ozone))
max(complete.cases(subset(dat, Month == 5)$Ozone))
complete.cases(subset(dat, Month == 5)$Ozone)
x <- subset(dat, Month == 5)$Ozone
x
x[complete.cases(x), ]
x[complete.cases(x)]
x
x[complete.cases(x)]
max(x[complete.cases(x)])
install.packages("swirl")
library("swirl")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
mySqrt <- sqrt(z-1)
mySqrt
myDiv = z/mySqrt
myDiv <- z/mySqrt
myDiv
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
1:20
pi:10
15:1
?:
?':'
?`:`
seq(1, 20)
seq(1, 20, by=0.5)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
my_seq = seq(5, 10, by=30)
my_seq <- seq(5, 10, by=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1;length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect[num_vect < 1]
tf
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "Name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Ty")
m_name <- c(my_char, "Ty")
my_name <- c(my_char, "Ty")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world", sep=" ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep="-")
bye
bye()
swirl()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y, z), 100)
myNa <- is.na(myData)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) $ x > 0]
x[!is.na(x) & x > 0]
z[c(3, 5, 7)]
x[c(3, 5, 7)]
x[0]
x[3000]
x[C(-2, -10)]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4, 5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatric <- myVector
myMatrix <- myVector
?matric
?matrix
myMatrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(myMatrix, myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
mYData
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myData
bye()
bye()
test   <- matrix(1:20, nrow <-  4, ncol <- 5)
test
nrow
ncol
names
names(test)
dim(test)
nrow(test)
ncol(test)
args(matrix)
test  <-  matrix(1:20, 4, 5, FALSE, c("a", "B", "c", "d"))
test  <-  matrix(1:20, 4, 5, FALSE, list("a", "B", "c", "d"))
list
args(list)
?list
library(iris)
library("iris")
?package
??package
?install
data(iris)
data(foo)
iris
?iris
t <- iris[iris$Species]
t
t <- iris[iris$Species == "virginica"]
t <- iris[, iris$Species == "virginica"]
t <- iris[iris$Species == "virginica", ]
t
t$Speal.length
t$Sepal.length
t$Sepal.Length
mean(t$Sepal.Length)
?colMeans
apply(iris[,1:4], 2, mean)
colMeans(iris)
apply(iris, 2, mean)
?apply
apply(iris[, 1:4], 1, mean)
apply(iris, 2, mean)
data(mtcars)
mtcars
?mean
?split
?tapply
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)["10.4"]
foo <- tapply(mtcars$cyl, mtcars$mpg, mean)
foo
foo$4.0
foo["4.0"]
foo <- sapply(split(mtcars$mpg, mtcars$cyl), mean)
foo
foo$4
foo["4"]
foo["4"] - foo["8"]
debug(ls)
ls
ls
debug(ls)
ls
?debug
ls()
2
1
3
4
5
exit
debug(ls)
ls
?debug
isdebugged(ls)
ls
ls
ls
ls()
iris
with(mtcars, tapply(mpg, cyl, mean))
mtcars
foo <- with(mtcars, tapply(hp, cyl, mean))
mtcars
foo <- with(mtcars, tapply(hp, cyl, mean))
foo
foo["8"] - foo["4"]
set.seed(1)
rpois(5, 2)
library(datasets)
Rprof()
fit <- lm(10 ~ 3 + 100)
setwd("~/repos/datasciencecoursera/exploratorydataanalysis/ExData_Plotting1")
week1 <- function(){
data <- read.table("household_power_consumption.txt", sep="\t")
}
test <- week1()
head(test)
week1 <- function(){
data <- read.table("household_power_consumption.txt", sep=";")
}
test <- week1()
str(test)
headt(test)
head(test)
?strptime
test$v2[2]
test$V2[2]
test$V2
test$V2[1]
test$V2[2]
strptime(test$V2[2])
strptime(test$V2[2], format="%H:%M:%S")
head(test)
week1 <- function(){
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y") )
setAs("character","myTime", function(from) strptime(from, format="%H:$M:%S") )
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE, colclasses=c("myDate","myTime", rep("numeric", 7)))
}
test <- week1()
week1 <- function(){
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y") )
setAs("character","myTime", function(from) strptime(from, format="%H:$M:%S") )
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE, colClasses=c("myDate","myTime", rep("numeric", 7)))
}
test <- week1()
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y") )
?setAs
week1 <- function(){
setClass("myDate")
setClass("myTime")
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y") )
setAs("character","myTime", function(from) strptime(from, format="%H:$M:%S") )
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE, colClasses=c("myDate","myTime", rep("numeric", 7)))
}
test <- week1()
?as.numeric
as.nimeric("a")
as.numeric("a")
week1 <- function(){
setClass("myDate")
setClass("myTime")
setClass("myNumber")
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y") )
setAs("character","myTime", function(from) strptime(from, format="%H:$M:%S") )
setAs("character","myNumber", function(from) as.numeric(from) )
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE, colClasses=c("myDate","myTime", rep("numeric", 7)))
}
test <- week1()
week1 <- function(){
setClass("myDate")
setClass("myTime")
setClass("myNumber")
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y") )
setAs("character","myTime", function(from) strptime(from, format="%H:$M:%S") )
setAs("character","myNumber", function(from) as.numeric(from) )
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE, colClasses=c("myDate","myTime", rep("myNumber", 7)))
}
test <- week1()
head(test)
week1 <- function(){
setClass("myDate")
setClass("myTime")
setClass("myNumber")
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y") )
setAs("character","myTime", function(from) strptime(from, format="%H:%M:%S") )
setAs("character","myNumber", function(from) as.numeric(from) )
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE, colClasses=c("myDate","myTime", rep("myNumber", 7)))
}
head(test)
test <- week1()
head(test)
?strptime
hist(test$Global_active_power)
hist(test$Global_active_power, col="red")
?hist
?png
?hist
hist(test$Global_active_power, col="red")
title(xlab="Test")
hist(test$Global_active_power, col="red", xlab="Test")
hist(test$Global_active_power, col="red", xlab="Global Active Power")
hist(test$Global_active_power, col="red", xlab="Global Active Power (kilowatts"), main=":)")
hist(test$Global_active_power, col="red", xlab="Global Active Power (kilowatts"), main="test")
hist(test$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", main="test")
hist(test$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", main="Global Active Power")
test <- week1()
?pmg
?png
png("./output/plot%d.png", width=480, height=480)
hist(test$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", main="Global Active Power")
dev.off()
week1 <- function(){
setClass("myDate")
setClass("myTime")
setClass("myNumber")
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y") )
setAs("character","myTime", function(from) strptime(from, format="%H:%M:%S") )
setAs("character","myNumber", function(from) as.numeric(from) )
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE, colClasses=c("myDate","myTime", rep("myNumber", 7)))
png("./output/plot%d.png", width=480, height=480)
hist(data$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", main="Global Active Power")
dev.off()
}
test <- week1()
test <- week1()
head(test)
week1 <- function(){
setClass("myDate")
setClass("myTime")
setClass("myNumber")
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y") )
setAs("character","myTime", function(from) strptime(from, format="%H:%M:%S") )
setAs("character","myNumber", function(from) as.numeric(from) )
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE, colClasses=c("myDate","myTime", rep("myNumber", 7)))
png("./output/plot%d.png", width=480, height=480)
hist(data$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", main="Global Active Power")
dev.off()
data
}
test <- week1()
head(test)
test$days <- wekdays(test$Date)
test$days <- weekdays(test$Date)
head(test)
plot(test$days, test$Global_active_power)
?plot
date
?weekdays
?lapply
apply(test[10,], funcion(x) print(x))
apply(test[10,], funcion(x) x)
apply(test[10,],1, funcion(x) x)
sapply(seq_along(test[10,]), funcion(x) test(x))
sapply(seq_along(test[10,]), funcion(x) test[x])
sapply(seq_along(test[10,]), funcion(x) test[x]))
sapply(seq_along(test[10,]), function(x) test[x])
sapply(seq_along(test[1,]), function(x) test[x])
sapply(seq_along(test[1,]), function(x) test[x,])
sapply(seq_along(test[2,]), function(x) test[x,])
sapply(seq_along(test[1,]), function(x) test[x,])
?seq_along
sapply(seq_len(test[1,]), function(x) test[x,])
sapply(seq_len(nrow(test), function(x) test[x,])
)
sapply(seq_len(nrow(test[2,])), function(x) test[x,])
sapply(seq_len(nrow(test[1,])), function(x) test[x,])
sapply(seq_len(nrow(test[4,])), function(x) test[x,])
sapply(seq_len(nrow(test[4,])), function(x) x)
sapply(seq_len(nrow(test[1:4,])), function(x) x)
sapply(seq_len(nrow(test[1:4,])), function(x) test[x,])
test$time[1]
test$Time[1]
test$Time[1] - test$Time[2]
test$Time[1] + 1
test$Time[1] + 2
test$Time[1] + 60*60*24
wd <- list("Mon", "Tues")
wd
wd[1]
wd[[1]]
wd$Mon
wd["Mon"]
wd <- list(Mon=0, Tues=1)
wd$Mon
?wekdays
?weekdays
weekdays(test$Date, abbreviate=TRUE)
wd$Mon
test$custom <- sapply(seq_len(nrow(test), function(x) wd(test$days[x]) + test$Time[x])
)
test$custom <- sapply(seq_len(nrow(test), function(x) wd(test$days[x])) + test$Time[x])
test$custom <- sapply(seq_len(nrow(test)), function(x) wd(test$days[x])) + test$Time[x])
test$custom <- sapply(seq_len(nrow(test)), function(x) wd[test$days[x]] + test$Time[x])
nrow
nrow(test)
seq_len(nrow(x))
seq_len(nrow(test))
test$custom <- sapply(seq_len(nrow(test)), function(x) wd[test$days[x]])
test$custom <- sapply(seq_len(nrow(test[1:10,])), function(x) wd[test$days[x]])
<- sapply(seq_len(nrow(test[1:10,])), function(x) wd[test$days[x]])
sapply(seq_len(nrow(test[1:10,])), function(x) wd[test$days[x]])
sapply(seq_len(nrow(test[1:10,])), function(x) test$days[x])
wd <- list(Saturday=0)
sapply(seq_len(nrow(test[1:10,])), function(x) test$days[x])
sapply(seq_len(nrow(test[1:10,])), function(x) wd[test$days[x]])
sapply(seq_len(nrow(test[1:10,])), function(x) wd[test$days[x]] + 1)
sapply(seq_len(nrow(test[1:10,])), function(x) wd[[test$days[x]] + 1)
sapply(seq_len(nrow(test[1:10,])), function(x) wd[[test$days[x]])
sapply(seq_len(nrow(test[1:10,])), function(x) wd[test$days[x])
sapply(seq_len(nrow(test[1:10,])), function(x) wd[test$days[x]])
sapply(seq_len(nrow(test[1:10,])), function(x) wd[[test$days[x]]])
sapply(seq_len(nrow(test[1:10,])), function(x) wd[[test$days[x]]] + 1)
sapply(seq_len(nrow(test[1:10,])), function(x) wd[[test$days[x]]] + test$Time[x])
test$custom <- sapply(seq_len(nrow(test)), function(x) wd[[test$days[x]]] + test$Time[x])
week1 <- function(sd="Mon", ed="Sun"){
sd <- 60*60*24
wd <- list(Sun=0*sd, Mon=1*sd, Tue=2*sd, Wed=3*sd, Thu=4*sd, Fri=5*sd, Sat=6*sd)
setClass("myDate")
setClass("myTime")
setClass("myNumber")
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y") )
setAs("character","myTime", function(from) strptime(from, format="%H:%M:%S") )
setAs("character","myNumber", function(from) as.numeric(from) )
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE, colClasses=c("myDate","myTime", rep("myNumber", 7)))
data$days <- weekdays(data$Date, abbreviate=TRUE)
data$custom <- sapply(seq_len(nrow(data)), function(x) wd[[data$days[x]]] + data$Time[x])
png("./output/plot%d.png", width=480, height=480)
hist(data$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", main="Global Active Power")
dev.off()
data
}
test <- week1()
headt(test)
head(test)
6*24*24
60*60*24
plot(test$custom, test$Global_active_power)
